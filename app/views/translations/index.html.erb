<div class="col col-12">
  <% if @support.topic? %>
    <div class="col col-3"> 
      <%= render partial: 'sublists/list', locals: { support: @support.support } %>
    </div>
  <% else %>
    <div class="col col-3"> 
      <%= render partial: 'sublists/list', locals: { support: @support } %>
    </div>
  <% end %>

  <div class="col col-9">
    <div class="max-width-4 mx-auto clearfix px2 bg-white">
      <h1 class="m0 pt2 h2"><%= @support.name %></h1>
      <div class="px2 pt1 flex justify-between">
        <% if @support.topic? %>
          <%= link_to 'Back', support_translations_path(@support.support), class: 'btn btn-outline-orange' %>
        <% else %>
          <%= link_to 'Back', root_path, class: 'btn btn-outline-orange' %>
        <% end %>
        <%= link_to 'Start Revision', support_reviews_path(@support, what_to_study: "all"), method: :post, remote: true, class:'btn btn-orange' %>
        <% unless @support.topic? %>
          <%= link_to 'Create a Topic', '#', class: 'btn btn-orange', onclick:"sendTopicForm();", id: 'createTopicButton' %>
        <% end %>
      </div>
      <div class="col col-12 center border-bottom border-cloud">
        <p class="col col-5 sm-col-3 fw700 h2"><%= @support.sourceLanguage.name %></p>
        <p class="col col-5 sm-col-3 fw700 h2"><%= @support.targetLanguage.name %></p>
        <p class="col col-3 xs-hide sm-show fw700 h2">Context</p>
        <p class="col col-2 sm-col-2">
        </p>
      </div>
      <%= form_tag new_support_sublist_path(@support), method: :get, remote: true do %>
        <div id="translations_container">
          <%= render partial: @translations %>
        </div>
        <%= submit_tag "Add Topic", id:"submitButton", style: 'display:none;' %>
      <% end %>
      <div class="col col-12 center py2 pb4 mb4">
        <%= simple_form_for [@support, @translation], remote: true do |f| %>
          <%= f.hidden_field :support_id, value: @support.id %>
          <div class="col col-5 sm-col-3">
          <%= f.text_field :sourceWriting, placeholder: "Word in #{@support.sourceLanguage.name}", :required => true, class: 'py1 center', style:'width:100%;' %>
          </div>
          <div class="col col-5 sm-col-3">
          <%= f.text_field :targetWriting, placeholder: "Translation in #{@support.targetLanguage.name}", :required => true, class: 'py1 center', style:'width:100%;', list: 'translation_list' %>
            <datalist id="translation_list">
            </datalist>
          </div>
          <div class="col col-3 xs-hide sm-show">
          <%= f.text_field :context, placeholder: 'Give a context!', class: 'py1 center'  %>
          </div>
          <div class="col col-2 sm-col-3">
          <%= f.submit 'Add', class: 'btn btn-orange', style:'width:100%;' %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">

  $('#translation_sourceWriting').focusout(function(){
    fetch($('#translation_sourceWriting').val());
  });

  function fetch(phrase){
    $.get( "/<%= @support.sourceLanguage.name.downcase %>_to_<%= @support.targetLanguage.name.downcase %>/" + phrase, function( data ) {
      var translation_list = document.getElementById('translation_list');
      document.getElementById('translation_list').innerHTML = '';
      for(var i = 0; i < data["tuc"].length; i++)
      {
        if(data["tuc"][i]["phrase"] != null){
          var option = document.createElement('option');
          option.value = data["tuc"][i]["phrase"]["text"];
          translation_list.appendChild(option);
        }
      }
    });
  }

  function changeTextCreateTopicButton(){
    var createTopicButton = document.getElementById('createTopicButton');
    if(isCheckboxSelected()){
      var itemWord = numberOfCheckboxSelected() == 1 ? 'Item' : 'Items' 
      createTopicButton.text = 'Create Topic From ' + numberOfCheckboxSelected() + ' ' + itemWord;
    }
    else{
      createTopicButton.text = 'Create Topic'
    }
    function isCheckboxSelected(){
      return numberOfCheckboxSelected() > 0;
    }

    function numberOfCheckboxSelected(){
      var checkboxes = document.getElementsByName('translation[]');
      var checkboxSelected = 0;
      for(var i = 0; i < checkboxes.length; i++){
        if(checkboxes[i].checked){
          checkboxSelected += 1;
        }
      }
      return checkboxSelected;
    }
  }

  function sendTopicForm(){
    event.preventDefault();
    submitButton = document.getElementById('submitButton');
    submitButton.click();
  }

  function check(event){
    if(event.type == 'mouseenter'){
      if(isMouseDown() && goingDown()){
        $(event.target).find('input:checkbox:first').trigger('click');
      }
    }else if(event.type == 'mouseleave'){
      if(isMouseDown() && goingUp()){
        $(event.target).find('input:checkbox:first').trigger('click');
      }   
    }

    function goingUp(){
      return direction == 'down';
    }

    function goingDown(){
      return direction == 'up';
    }
  }

  function isMouseDown(){
    return Boolean( mouseDown );
  }

  var bodyElement = document.querySelector('body');
  bodyElement.addEventListener('mousemove', getMouseDirection, false);
  var oldY = 0;
  var direction = '';

  function getMouseDirection(e){
    if(oldY > e.pageY){
      direction = 'up'
    }
    else if(oldY < e.pageY){
      direction = 'down'
    }
    oldY = e.pageY;
  }


  var mouseDown = 0;
  document.body.onmousedown = function onMouseDown(){
    mouseDown++;
  }

  document.body.onmouseup = function onMouseUp(){
    mouseDown--;
  }

</script>
